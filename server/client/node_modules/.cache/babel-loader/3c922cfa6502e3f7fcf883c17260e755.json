{"ast":null,"code":"var _jsxFileName = \"/Users/admin/flex-525/projects/Vibez/server/client/src/Components/PlaylistTitle.js\";\nimport React, { useState } from 'react';\nimport editicon from '../images/editicon.png';\nimport { func, string } from \"prop-types\";\n\nconst PlaylistTitle = ({\n  getPlaylistTitle,\n  title\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setTitle] = useState(title);\n\n  const handleEdit = async () => {\n    console.log(\"handleedit\");\n    setIsEditing(!isEditing); //meaning submit is showing\n\n    if (isEditing) {\n      let editedPost = {\n        title: editedTitle\n      }; // await PostService.update(id, editedPost);\n      // getPostsAgain();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, !isEditing && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }\n  }, title), isEditing && /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setTitle(e.target.value),\n    value: editedTitle,\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playlist-edit-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"edit-icon\",\n    src: editicon,\n    alt: \"edit icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })));\n};\n\nPlaylistTitle.propTypes = {\n  title: string.isRequired,\n  getPostsAgain: func\n};\nexport default PlaylistTitle;","map":{"version":3,"sources":["/Users/admin/flex-525/projects/Vibez/server/client/src/Components/PlaylistTitle.js"],"names":["React","useState","editicon","func","string","PlaylistTitle","getPlaylistTitle","title","isEditing","setIsEditing","editedTitle","setTitle","handleEdit","console","log","editedPost","e","target","value","propTypes","isRequired","getPostsAgain"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA;AAAnB,CAAD,KAA+B;AACjD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,QAAd,IAAyBV,QAAQ,CAACM,KAAD,CAAvC;;AAEA,QAAMK,UAAU,GAAG,YAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ,CAF2B,CAG3B;;AACA,QAAIA,SAAJ,EAAe;AACX,UAAIO,UAAU,GAAG;AACbR,QAAAA,KAAK,EAAEG;AADM,OAAjB,CADW,CAIX;AACA;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACF,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADf,EAECC,SAAS,iBACN;AACI,IAAA,QAAQ,EAAGQ,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAD7B;AAEI,IAAA,KAAK,EAAER,WAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,WAAW,EAAC,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAaI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAER,QAAhC;AAA0C,IAAA,GAAG,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAbJ,CADJ;AAmBH,CApCD;;AAsCAG,aAAa,CAACc,SAAd,GAA0B;AACtBZ,EAAAA,KAAK,EAAEH,MAAM,CAACgB,UADQ;AAEtBC,EAAAA,aAAa,EAAElB;AAFO,CAA1B;AAKA,eAAeE,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport editicon from '../images/editicon.png'\nimport { func, string } from \"prop-types\"\n\nconst PlaylistTitle = ({getPlaylistTitle, title}) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedTitle, setTitle] =useState(title);\n\n    const handleEdit = async () => {\n        console.log(\"handleedit\");\n        setIsEditing(!isEditing);\n        //meaning submit is showing\n        if (isEditing) {\n            let editedPost = {\n                title: editedTitle,\n            };\n            // await PostService.update(id, editedPost);\n            // getPostsAgain();\n        }\n    };\n\n    return (\n        <div className=\"playlist-header\">\n            <div className=\"playlist-title\">\n            {!isEditing && <h2>{title}</h2>}\n            {isEditing && (\n                <input\n                    onChange={(e) => setTitle(e.target.value)}\n                    value={editedTitle}\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"TITLE\"\n                />\n            )}\n            </div>\n            <div className=\"playlist-edit-icon\">\n            <img className=\"edit-icon\" src={editicon} alt=\"edit icon\" />\n            </div>\n        </div>\n    )\n}\n\nPlaylistTitle.propTypes = {\n    title: string.isRequired,\n    getPostsAgain: func,\n};\n\nexport default PlaylistTitle\n"]},"metadata":{},"sourceType":"module"}